services:
  # Database
  postgres:
    image: postgres:15
    container_name: agri_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: agri_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - agri_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka and related services
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: agri_zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - agri_network
    restart: always

  kafka:
    image: bitnami/kafka:3.4
    container_name: agri_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - agri_network
    restart: always

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    container_name: agri_kafka_ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - agri_network
    restart: always

  # Django Backend
  backend:
    build:
      context: ./data_processor
      dockerfile: Dockerfile
    image: agri_backend:latest
    container_name: agri_backend
    depends_on:
      - postgres
      - kafka
    ports:
      - "8000:8000"
    volumes:
      - ./data_processor:/app
      - ./media:/app/backend/media
      - ./static:/app/backend/static
    environment:
      - DEBUG=0
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=agri_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - KAFKA_ENABLED=true
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=excel_data
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend
    networks:
      - agri_network
    restart: always

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: agri_frontend:latest
    container_name: agri_frontend
    ports:
      - "8081:80"
    depends_on:
      - backend
    networks:
      - agri_network
    restart: always

networks:
  agri_network:
    driver: bridge

volumes:
  postgres_data:
