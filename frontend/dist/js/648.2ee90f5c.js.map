{"version":3,"file":"js/648.2ee90f5c.js","mappings":"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","sources":["webpack://data-processor-frontend/./src/views/DataVisualizationView.vue","webpack://data-processor-frontend/./src/views/DataVisualizationView.vue?400b"],"sourcesContent":["<template>\n  <div class=\"visualization-view container py-4\">\n    <div class=\"mb-4\">\n      <button @click=\"$router.go(-1)\" class=\"btn btn-sm btn-outline-secondary\">\n        <i class=\"bi bi-arrow-left me-1\"></i> Back\n      </button>\n    </div>\n    \n    <h2 class=\"mb-4\">Data Visualization</h2>\n    \n    <div v-if=\"loading\" class=\"text-center my-5\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"mt-2\">Loading your files...</p>\n    </div>\n    \n    <div v-else-if=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n    \n    <div v-else-if=\"processedFiles.length === 0\" class=\"alert alert-info\">\n      <div class=\"text-center\">\n        <i class=\"bi bi-file-earmark-x fs-1 mb-2\"></i>\n        <p>No processed files available. Process a file to see visualizations.</p>\n      </div>\n    </div>\n    \n    <div v-else class=\"row\">\n      <div v-for=\"file in processedFiles\" :key=\"file.id\" class=\"col-md-6 col-lg-4 mb-4\">\n        <div class=\"card h-100 shadow-sm\">\n          <div class=\"card-header bg-success text-white d-flex justify-content-between align-items-center\">\n            <div class=\"text-truncate\" :title=\"file.title\">{{ file.title }}</div>\n            <span class=\"badge bg-light text-dark\">{{ formatDate(file.processed_at) }}</span>\n          </div>\n          \n          <div class=\"card-body\">\n            <div class=\"chart-preview\">\n              <canvas :ref=\"`chart-${file.id}`\"></canvas>\n            </div>\n            \n            <div class=\"mt-3 text-center\">\n              <router-link :to=\"`/files/${file.id}`\" class=\"btn btn-outline-success btn-sm\">\n                <i class=\"bi bi-graph-up me-1\"></i> View All Charts\n              </router-link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'DataVisualizationView',\n  data() {\n    return {\n      chartInstances: {},\n      chartRenderTimeout: null\n    };\n  },\n  computed: {\n    ...mapState(['files', 'loading', 'error']),\n    processedFiles() {\n      return this.files.filter(file => file.processed);\n    }\n  },\n  mounted() {\n    this.fetchFiles();\n    // Give time for the DOM to load before attempting to render charts\n    this.chartRenderTimeout = setTimeout(() => {\n      this.renderCharts();\n    }, 500);\n  },\n  \n  updated() {\n    // Wait for the DOM to be fully updated\n    this.$nextTick(() => {\n      this.renderCharts();\n    });\n  },\n  beforeUnmount() {\n    // Important: Clean up all chart instances before component is destroyed\n    this.destroyAllCharts();\n    // Cancel any pending chart renders\n    if (this.chartRenderTimeout) {\n      clearTimeout(this.chartRenderTimeout);\n    }\n  },\n  methods: {\n    ...mapActions(['fetchFiles']),\n    \n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString();\n    },\n    \n    destroyAllCharts() {\n      // Safely destroy all chart instances\n      Object.values(this.chartInstances).forEach(chart => {\n        if (chart && typeof chart.destroy === 'function') {\n          chart.destroy();\n        }\n      });\n      this.chartInstances = {};\n    },\n    \n    renderCharts() {\n      // First destroy any existing charts\n      this.destroyAllCharts();\n      \n      // Import Chart.js dynamically to avoid SSR issues\n      import('chart.js/auto').then((Chart) => {\n        // Make sure the component is still mounted\n        if (!this.$refs) return;\n        \n        // Render charts for each file\n        this.processedFiles.forEach(file => {\n          const refName = `chart-${file.id}`;\n          // Using $refs safely\n          const elements = this.$refs[refName];\n          \n          // Check if the ref exists and is an array\n          if (!elements || !elements.length) return;\n          \n          // Get the canvas element\n          const canvas = elements[0];\n          if (!canvas) return;\n          \n          // Ensure canvas has dimensions\n          if (canvas.offsetWidth === 0 || canvas.offsetHeight === 0) return;\n          \n          // Fetch the processed data for this file\n          this.$store.dispatch('fetchProcessedData', file.id)\n            .then(data => {\n              // Check if data is valid for visualization\n              if (!data || !Array.isArray(data)) {\n                if (data && data.error) {\n                  // Show a placeholder instead of an error\n                  this.renderEmptyChart(Chart.default, canvas, `File cannot be previewed: ${data.error}`);\n                  this.$toast?.warning(`File \"${file.title}\": ${data.error}, please check file content again.`);\n                }\n                return;\n              }\n              \n              if (data.length <= 1) {\n                this.renderEmptyChart(Chart.default, canvas, \"Not enough rows\");\n                this.$toast?.warning(`File \"${file.title}\" doesn't have enough data for visualization, please check file content again.`);\n                return;\n              }\n              \n              const keys = data[0] ? Object.keys(data[0]) : [];\n              if (keys.length <= 1) {\n                this.renderEmptyChart(Chart.default, canvas, \"Not enough columns\");\n                this.$toast?.warning(`File \"${file.title}\" doesn't have enough columns for visualization, please check file content again.`);\n                return;\n              }\n              \n              // Create random data for preview or use actual data\n              const chartLabels = data.slice(0, 5).map(row => row[keys[0]]);\n              const chartData = data.slice(0, 5).map(row => {\n                const val = row[keys[1]];\n                return isNaN(val) ? Math.random() * 100 : parseFloat(val);\n              });\n              \n              try {\n                // Create the chart\n                this.chartInstances[file.id] = new Chart.default(canvas, {\n                  type: 'bar',\n                  data: {\n                    labels: chartLabels.length ? chartLabels : ['Cat 1', 'Cat 2', 'Cat 3', 'Cat 4', 'Cat 5'],\n                    datasets: [{\n                      label: keys[1] || 'Sample Data',\n                      data: chartData.length ? chartData : [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100],\n                      backgroundColor: '#198754'\n                    }]\n                  },\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    plugins: {\n                      legend: {\n                        display: false\n                      },\n                      title: {\n                        display: true,\n                        text: 'Preview'\n                      }\n                    }\n                  }\n                });\n              } catch (error) {\n                console.error('Error creating chart:', error);\n                this.renderEmptyChart(Chart.default, canvas, \"Error creating chart\");\n              }\n            })\n            .catch(error => {\n              console.error(`Error fetching data for file ${file.id}:`, error);\n              this.renderEmptyChart(Chart.default, canvas, \"Cannot load data\");\n              if (error.response?.data?.error) {\n                this.$toast?.error(`Error with file \"${file.title}\": ${error.response.data.error}, please check file content again.`);\n              }\n            });\n        });\n      }).catch(error => {\n        console.error('Failed to load Chart.js:', error);\n      });\n    },\n    \n    renderEmptyChart(Chart, canvas, message) {\n      try {\n        // Create a placeholder chart with a message\n        this.chartInstances[`empty-${Date.now()}`] = new Chart(canvas, {\n          type: 'bar',\n          data: {\n            labels: [''],\n            datasets: [{\n              data: [0],\n              backgroundColor: '#f8f9fa'\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              y: {\n                display: false,\n                beginAtZero: true\n              },\n              x: {\n                display: false\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              },\n              tooltip: {\n                enabled: false\n              },\n              title: {\n                display: true,\n                text: message || 'No data available',\n                color: '#6c757d',\n                font: {\n                  size: 14\n                }\n              }\n            }\n          }\n        });\n      } catch (error) {\n        console.error('Error creating empty chart:', error);\n      }\n    },\n  }\n};\n</script>\n\n<style scoped>\n.chart-preview {\n  height: 150px;\n  width: 100%;\n  position: relative;\n}\n</style>\n","import { render } from \"./DataVisualizationView.vue?vue&type=template&id=220b9a82&scoped=true\"\nimport script from \"./DataVisualizationView.vue?vue&type=script&lang=js\"\nexport * from \"./DataVisualizationView.vue?vue&type=script&lang=js\"\n\nimport \"./DataVisualizationView.vue?vue&type=style&index=0&id=220b9a82&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-220b9a82\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","_ctx","$router","go","_createTextVNode","loading","_hoisted_3","role","error","_hoisted_4","_toDisplayString","$options","processedFiles","length","_hoisted_5","_hoisted_6","_Fragment","_renderList","file","id","_hoisted_7","_hoisted_8","title","_hoisted_9","_hoisted_10","formatDate","processed_at","_hoisted_11","_hoisted_12","ref_for","ref","_hoisted_13","_createVNode","_component_router_link","to","default","_withCtx","_","name","data","chartInstances","chartRenderTimeout","computed","mapState","this","files","filter","processed","mounted","fetchFiles","setTimeout","renderCharts","updated","$nextTick","beforeUnmount","destroyAllCharts","clearTimeout","methods","mapActions","dateString","date","Date","toLocaleDateString","Object","values","forEach","chart","destroy","then","Chart","$refs","refName","elements","canvas","offsetWidth","offsetHeight","$store","dispatch","Array","isArray","renderEmptyChart","$toast","warning","keys","chartLabels","slice","map","row","chartData","val","isNaN","Math","random","parseFloat","type","labels","datasets","label","backgroundColor","options","responsive","maintainAspectRatio","plugins","legend","display","text","console","catch","response","message","now","scales","y","beginAtZero","x","tooltip","enabled","color","font","size","__exports__","render"],"sourceRoot":""}