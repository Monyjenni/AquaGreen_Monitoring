{"version":3,"file":"js/822.dd44f751.js","mappings":"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","sources":["webpack://data-processor-frontend/./src/views/UploadView.vue","webpack://data-processor-frontend/./src/components/common/BackButton.vue","webpack://data-processor-frontend/./src/components/common/BackButton.vue?2df4","webpack://data-processor-frontend/./src/views/UploadView.vue?6d82"],"sourcesContent":["<template>\n  <div class=\"upload-view\">\n    <BackButton />\n    <div class=\"mb-4\">\n      <router-link to=\"/\" class=\"btn btn-sm btn-outline-secondary\">\n        <i class=\"bi bi-arrow-left me-1\"></i> Back\n      </router-link>\n      <h2 class=\"mt-3 text-success\">Upload Greenhouse Data</h2>\n    </div>\n    \n    <BaseCard class=\"mb-4\">\n      <template #header>\n        <h5 class=\"card-title mb-0\">Upload Excel File</h5>\n      </template>\n      \n      <form @submit.prevent=\"uploadFile\">\n        <div class=\"mb-3\">\n          <label for=\"title\" class=\"form-label\">Title</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"title\"\n            v-model=\"title\"\n            placeholder=\"Enter a descriptive title for your data\"\n            required\n          />\n          <div class=\"form-text\">Give your file a meaningful name related to your greenhouse data.</div>\n        </div>\n        \n        <div class=\"mb-3\">\n          <label for=\"file\" class=\"form-label\">Excel File</label>\n          <input\n            type=\"file\"\n            class=\"form-control\"\n            id=\"file\"\n            @change=\"handleFileChange\"\n            accept=\".xlsx,.xls\"\n            required\n          />\n          <div class=\"form-text\">Accepted formats: .xlsx, .xls (Excel files only)</div>\n        </div>\n        \n        <div v-if=\"fileError\" class=\"alert alert-danger\">\n          <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          {{ fileError }}\n        </div>\n        <div v-if=\"previewError\" class=\"alert alert-danger\">\n          <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          {{ previewError }}\n        </div>\n        <div v-if=\"error\" class=\"alert alert-danger\">\n          <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          {{ typeof error === 'object' ? Object.values(error).flat().join(', ') : error }}\n        </div>\n        <div class=\"d-flex gap-2 mb-3\">\n          <BaseButton \n            variant=\"info\" \n            :disabled=\"!file || previewLoading\" \n            :loading=\"previewLoading\"\n            @click=\"previewFile\"\n          >\n            Preview Data\n          </BaseButton>\n          <BaseButton \n            variant=\"success\" \n            :disabled=\"loading || !file || !previewData.length\" \n            :loading=\"loading\"\n            type=\"submit\"\n          >\n            Confirm Upload\n          </BaseButton>\n        </div>\n        <div v-if=\"previewData.length\">\n          <h5>Data Preview (first 5 rows)</h5>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th v-for=\"header in Object.keys(previewData[0])\" :key=\"header\">{{ header }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(row, idx) in previewData\" :key=\"idx\">\n                <td v-for=\"header in Object.keys(row)\" :key=\"header\">{{ row[header] }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </form>\n    </BaseCard>\n    \n    <BaseCard>\n      <template #header>\n        <h5 class=\"card-title mb-0\">Upload Guidelines</h5>\n      </template>\n      \n      <h6 class=\"card-subtitle mb-3 text-success\">How to prepare your greenhouse data files:</h6>\n      <ul class=\"list-group list-group-flush mb-3\">\n        <li class=\"list-group-item bg-light\">\n          <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n          Ensure your Excel file contains greenhouse data in a structured format\n        </li>\n        <li class=\"list-group-item bg-light\">\n          <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n          Include headers in your Excel file for better data identification\n        </li>\n        <li class=\"list-group-item\">\n          <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n          Maximum file size: 10MB\n        </li>\n      </ul>\n      <div class=\"alert alert-success\">\n        <i class=\"bi bi-info-circle-fill me-2\"></i>\n        After uploading, you can view and analyze your data in the <router-link to=\"/files\" class=\"alert-link\">Files section</router-link>.\n      </div>\n    </BaseCard>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\nimport * as XLSX from 'xlsx';\nimport BaseButton from '@/components/common/BaseButton.vue';\nimport BaseCard from '@/components/common/BaseCard.vue';\nimport BackButton from '@/components/common/BackButton.vue';\n\nexport default {\n  name: 'UploadView',\n  components: {\n    BaseButton,\n    BaseCard,\n    BackButton\n  },\n  data() {\n    return {\n      title: '',\n      file: null,\n      fileError: null,\n      previewData: [],\n      previewLoading: false,\n      previewError: null,\n      isUploading: false,\n      uploadProgress: 0,\n    };\n  },\n  computed: {\n    ...mapState(['loading', 'error'])\n  },\n  methods: {\n    ...mapActions(['uploadFile']),\n    handleFileChange(event) {\n      const selectedFile = event.target.files[0];\n      this.fileError = null;\n      \n      if (!selectedFile) {\n        this.file = null;\n        return;\n      }\n      \n      // Check file type\n      const validTypes = ['application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\n      if (!validTypes.includes(selectedFile.type)) {\n        this.fileError = 'Invalid file type. Please upload an Excel file (.xlsx or .xls)';\n        this.file = null;\n        return;\n      }\n      \n      // Check file size (10MB max)\n      const maxSize = 10 * 1024 * 1024; // 10MB in bytes\n      if (selectedFile.size > maxSize) {\n        this.fileError = 'File is too large. Maximum size is 10MB';\n        this.file = null;\n        return;\n      }\n      \n      this.file = selectedFile;\n    },\n    async previewFile() {\n      this.previewError = null;\n      this.previewLoading = true;\n      try {\n        this.previewData = await this.parseExcel(this.file);\n      } catch (err) {\n        this.previewError = 'Failed to parse file';\n      } finally {\n        this.previewLoading = false;\n      }\n    },\n    parseExcel(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n          const firstSheet = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[firstSheet];\n          const json = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n          const headers = json[0] || [];\n          const rows = json.slice(1, 6);\n          const result = rows.map(row => {\n            const obj = {};\n            headers.forEach((header, idx) => {\n              obj[header] = row[idx];\n            });\n            return obj;\n          });\n          resolve(result);\n        };\n        reader.onerror = err => reject(err);\n        reader.readAsArrayBuffer(file);\n      });\n    },\n    async uploadFile() {\n      if (!this.file) {\n        this.$toast?.error('Please select a file to upload');\n        return;\n      }\n\n      // Check if file is empty\n      if (this.file.size === 0) {\n        this.$toast?.error('File is empty. Please select a valid file.');\n        return;\n      }\n\n      this.isUploading = true;\n      this.uploadProgress = 0;\n      \n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('file', this.file);\n        \n        const response = await this.$store.dispatch('uploadFile', formData);\n        \n        // Handle success\n        this.$toast?.success('File uploaded successfully');\n        \n        // Navigate directly to the file detail view instead of the files list\n        if (response && response.id) {\n          this.$router.push(`/files/${response.id}`);\n        } else {\n          this.$router.push('/files');\n        }\n      } catch (error) {\n        // Handle error\n        console.error('Upload error:', error.response?.data || error);\n        \n        // Display structured error messages\n        if (error.response?.data?.error) {\n          this.$toast?.error(`Error: ${error.response.data.error}`);\n        } else if (error.response?.data?.detail) {\n          this.$toast?.error(`Error: ${error.response.data.detail}`);\n        } else if (error.response?.data) {\n          // If it's an object with multiple errors\n          if (typeof error.response.data === 'object') {\n            const errorMsg = Object.entries(error.response.data)\n              .map(([key, value]) => `${key}: ${value}`)\n              .join(', ');\n            this.$toast?.error(`Validation errors: ${errorMsg}`);\n          } else {\n            this.$toast?.error(`Error: ${error.response.data}`);\n          }\n        } else {\n          this.$toast?.error('Failed to upload file. Please try again.');\n        }\n      } finally {\n        this.isUploading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.upload-view h1 {\n  margin-bottom: 2rem;\n}\n\n.form-text {\n  font-size: 0.85rem;\n  color: #6c757d;\n}\n\n.list-group-item {\n  border-left: none;\n  border-right: none;\n}\n\n.list-group-item:first-child {\n  border-top: none;\n}\n\n.list-group-item:last-child {\n  border-bottom: none;\n}\n</style>\n","<template>\n  <button @click=\"goBack\" class=\"btn btn-outline-secondary back-button\">\n    <i class=\"bi bi-arrow-left me-1\"></i> Back\n  </button>\n</template>\n\n<script>\nexport default {\n  name: 'BackButton',\n  methods: {\n    goBack() {\n      // First check if there's previous history to go back to\n      if (window.history.length > 1) {\n        this.$router.go(-1);\n      } else {\n        // If no history, navigate to home\n        this.$router.push('/');\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.back-button {\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  z-index: 1000;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>\n","import { render } from \"./BackButton.vue?vue&type=template&id=c98dc6d2&scoped=true\"\nimport script from \"./BackButton.vue?vue&type=script&lang=js\"\nexport * from \"./BackButton.vue?vue&type=script&lang=js\"\n\nimport \"./BackButton.vue?vue&type=style&index=0&id=c98dc6d2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c98dc6d2\"]])\n\nexport default __exports__","import { render } from \"./UploadView.vue?vue&type=template&id=1b57e29a&scoped=true\"\nimport script from \"./UploadView.vue?vue&type=script&lang=js\"\nexport * from \"./UploadView.vue?vue&type=script&lang=js\"\n\nimport \"./UploadView.vue?vue&type=style&index=0&id=1b57e29a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b57e29a\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_BackButton","_createElementVNode","_hoisted_2","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_component_BaseCard","header","onSubmit","_withModifiers","args","$options","uploadFile","_hoisted_3","for","type","id","$event","$data","title","placeholder","required","_hoisted_4","onChange","handleFileChange","accept","fileError","_hoisted_5","_toDisplayString","_createCommentVNode","previewError","_hoisted_6","_ctx","error","_hoisted_7","Object","values","flat","join","_hoisted_8","_component_BaseButton","variant","disabled","file","previewLoading","loading","onClick","previewFile","previewData","length","_hoisted_9","_hoisted_10","_Fragment","_renderList","keys","row","idx","_hoisted_11","goBack","name","methods","window","history","this","$router","go","push","__exports__","components","BaseButton","BaseCard","BackButton","data","isUploading","uploadProgress","computed","mapState","mapActions","event","selectedFile","target","files","validTypes","includes","maxSize","size","parseExcel","err","Promise","resolve","reject","reader","FileReader","onload","e","Uint8Array","result","workbook","XLSX","firstSheet","SheetNames","worksheet","Sheets","json","sheet_to_json","headers","rows","slice","map","obj","forEach","onerror","readAsArrayBuffer","formData","FormData","append","response","$store","dispatch","$toast","success","console","detail","errorMsg","entries","value","render"],"sourceRoot":""}